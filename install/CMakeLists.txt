set(CPACK_PACKAGE_NAME "Patchman")
set(CPACK_PACKAGE_VENDOR "${PROJECT_AUTHOR}")
set(CPACK_PACKAGE_ICON "${PROJECT_SOURCE_DIR}/patchman.png")

set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/license.txt")
if (CMAKE_SYSTEM_NAME STREQUAL "Linux")
    set(CPACK_GENERATOR "DEB;TGZ")
    set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
    set(CPACK_DEBIAN_PACKAGE_SHLIBDEPS ON)
elseif (CMAKE_SYSTEM_NAME STREQUAL "Windows")
    set(CPACK_GENERATOR "WIX;ZIP")
    set(CPACK_PACKAGE_INSTALL_DIRECTORY "Patchman")
    set(CPACK_PACKAGE_EXECUTABLES "patchman;Patchman")
    set(CPACK_WIX_UPGRADE_GUID "9C15952D-B2D6-4FF7-BF36-4FE4AE831A14")
    set(CPACK_WIX_LICENSE_RTF "${CMAKE_CURRENT_SOURCE_DIR}/license.rtf")
    set(CPACK_WIX_PROGRAM_MENU_FOLDER ".")
    set(CPACK_WIX_PROPERTY_ARPURLINFOABOUT "${PROJECT_HOMEPAGE_URL}")
    set(CPACK_WIX_PRODUCT_ICON "${PROJECT_SOURCE_DIR}/resources/icons/patchman.ico")
elseif (CMAKE_SYSTEM_NAME STREQUAL "Darwin")
    set(CPACK_GENERATOR "DragNDrop")
endif ()

# Updater signing.
set(DSA_PRIV "${CMAKE_CURRENT_SOURCE_DIR}/dsa_priv.pem" CACHE FILEPATH "Path to DSA Private Key, for signing installers")
if (EXISTS "${DSA_PRIV}")
    message(STATUS "DSA private key available, signing installer.")
    if (CMAKE_SYSTEM_NAME STREQUAL "Windows")
        find_program(WINSPARKLE_SIGN_UPDATE NAMES "sign_update.bat" DOC "winsparkle update signing script")
    endif ()
    configure_file(sign_installer.cmake "${CMAKE_CURRENT_BINARY_DIR}/sign_installer.cmake" @ONLY)
    set(CPACK_POST_BUILD_SCRIPTS "${CMAKE_CURRENT_BINARY_DIR}/sign_installer.cmake")
endif ()

include(CPack)
